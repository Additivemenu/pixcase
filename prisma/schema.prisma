// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


enum OrderStatus{
  fuilfilled
  shipped
  awaiting_shipment
}

enum PhoneModel{
  iphonex
  iphone11
  iphone12
  iphone13
  iphone14
  iphone15
}

enum CaseMaterial{
  silicone
  polycarbonate
}

enum CaseFinish{
  smooth
  textured
}

enum CaseColor{
  black 
  blue
  rose
}

model Configuration{
  id String @id @default(cuid())
  width Int
  height Int
  imageUrl String   // original image url
  color CaseColor?
  model PhoneModel?
  material CaseMaterial?
  finish CaseFinish?
  croppedImageUrl String?   // the image url after cropping when user drag img onto their phone
  Order Order[]
}


model User{
  id String @id @default(cuid())    //! bug, it should be user id from kinde, not prisma auto generated id
  email String 
  Order Order[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Order{
  id String @id @default(cuid())
  configurationId String
  configuration Configuration @relation(fields: [configurationId], references: [id])

  userId String
  user User @relation(fields: [userId], references: [id])

  amount Float
  isPaid Boolean @default(false)
  status OrderStatus @default(awaiting_shipment)

  shippingAddressId String?
  shippingAddress ShippingAddress? @relation(fields: [shippingAddressId], references: [id])

  billingAddressId String?
  billingAddress BillinggAddress? @relation(fields: [billingAddressId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}


model ShippingAddress{
  id String @id @default(cuid())
  name String
  street String
  city String
  postalCode String
  country String
  state String?
  phoneNumber String?
  orders Order[]
}

model BillinggAddress{
  id String @id @default(cuid())
  name String
  street String
  city String
  postalCode String
  country String
  state String?
  phoneNumber String?
  orders Order[]
}